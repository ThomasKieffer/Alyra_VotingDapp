{"version":3,"sources":["getWeb3.js","components/UserAddress.jsx","components/Workflow.jsx","components/Voters.jsx","components/Proposals.jsx","components/SetVote.jsx","App.jsx","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","ethereum","web3","Web3","enable","on","alert","location","reload","console","log","provider","providers","HttpProvider","UserAddress","props","registered","addressVoters","includes","accounts","Workflow","nextWorkflow","workflow","contract","methods","startProposalsRegistering","send","from","endProposalsRegistering","startVotingSession","endVotingSession","tallyVotes","winningProposalID","call","setWinner","winner","isOwner","onClick","Voters","useState","voterAddr","setVoterAddr","addVoter","map","address","id","name","placeholder","value","onChange","event","target","Proposals","proposalDesc","setProposalDesc","descriptions","setDescriptions","addProposal","useEffect","retrieveProposalsContent","getOneProposal","content","proposals","proposal","propContent","prevDescription","description","SetVote","voteId","setVoteId","vote","setVote","App","setAccounts","setContract","setIsOwner","workflowStatus","setWorkflowStatus","setaddressVoters","setProposals","web3Provider","eth","getAccounts","net","getId","networkId","deployedNetwork","VotingContract","networks","instance","Contract","abi","owner","initWorkflow","from0Tolast","fromBlock","toBlock","fromLast","events","WorkflowStatusChange","returnValues","newStatus","getPastEvents","addresses","add","voterAddress","VoterRegistered","prevAddresses","proposalsEvt","prop","proposalId","ProposalRegistered","prevProposal","error","setUpWeb3","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5bcf22a.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      // Si Metamask est install√© sur le navigateur\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          // Recup des comptes\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n          window.ethereum.on(\"disconnect\", function () {\n            alert(\"il faut se connecter\");\n          });\n          window.ethereum.on(\"accountsChanged\", function () {\n            window.location.reload();\n          });\n          window.ethereum.on(\"chainChanged\", function () {\n            window.location.reload();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from \"react\";\n\nfunction UserAddress(props) {\n  //check onlyVoter\n  const registered = props.addressVoters.includes(props.accounts[0], 0);\n  return (\n    <div>\n      <h1>Your address : {props.accounts}</h1>\n      {registered ? <h3>you are registered</h3> : <h3>you are not registered</h3>}\n    </div>\n  );\n}\n\nexport default UserAddress;\n","import React from \"react\";\n\nfunction Workflow(props) {\n  // const [winner, setWinner] = useState(0);\n\n  const nextWorkflow = async () => {\n    switch (props.workflow) {\n      case \"0\":\n        await props.contract.methods.startProposalsRegistering().send({ from: props.accounts[0] });\n        break;\n\n      case \"1\":\n        await props.contract.methods.endProposalsRegistering().send({ from: props.accounts[0] });\n        break;\n\n      case \"2\":\n        await props.contract.methods.startVotingSession().send({ from: props.accounts[0] });\n        break;\n\n      case \"3\":\n        await props.contract.methods.endVotingSession().send({ from: props.accounts[0] });\n        break;\n\n      case \"4\": //Caluclate winner and set it.\n        await props.contract.methods.tallyVotes().send({ from: props.accounts[0] });\n        props.setWinner(await props.contract.methods.winningProposalID().call({ from: props.accounts[0] }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {props.workflow === \"0\" && <h1>Workflow : Registering voters</h1>}\n        {props.workflow === \"1\" && <h1>Workflow : Proposals registration started</h1>}\n        {props.workflow === \"2\" && <h1>Workflow : Proposals registration ended</h1>}\n        {props.workflow === \"3\" && <h1>Workflow : Voting session started</h1>}\n        {props.workflow === \"4\" && <h1>Workflow : Voting session ended</h1>}\n        {props.workflow === \"5\" && (\n          <div>\n            <h1>Workflow : Votes tallied</h1>\n            <h1>Winner is {props.winner}</h1>\n          </div>\n        )}\n      </div>\n      {/* Only owner can change the workflow */}\n      {props.isOwner && (\n        <div>\n          {props.workflow === \"0\" && <button onClick={nextWorkflow}>Start proposals registration</button>}\n          {props.workflow === \"1\" && <button onClick={nextWorkflow}>End proposals registration</button>}\n          {props.workflow === \"2\" && <button onClick={nextWorkflow}>Start votes</button>}\n          {props.workflow === \"3\" && <button onClick={nextWorkflow}>End votes</button>}\n          {props.workflow === \"4\" && <button onClick={nextWorkflow}>Tally votes</button>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Workflow;\n","import React, { useState } from \"react\";\n\nfunction Voters(props) {\n  const [voterAddr, setVoterAddr] = useState(\"\");\n\n  const addVoter = async () => {\n    await props.contract.methods.addVoter(voterAddr).send({ from: props.accounts[0] });\n  };\n\n  function handleOnChange(event) {\n    const { value } = event.target;\n    setVoterAddr(value);\n  }\n\n  return (\n    <div>\n      <h1>Voters</h1>\n      {props.addressVoters.map((address, id) => {\n        return (\n          <h5 key={id}>\n            {id} : {address}\n          </h5>\n        );\n      })}\n      {/* Check if is owner and workflow == registration started */}\n      {props.isOwner && props.workflow === \"0\" && (\n        <div>\n          <input name=\"addr\" placeholder=\"address voter\" value={voterAddr} onChange={handleOnChange} />\n          <button onClick={addVoter}>Add Voter</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Voters;\n","import React, { useState, useEffect } from \"react\";\n\nfunction Proposals(props) {\n  const [proposalDesc, setProposalDesc] = useState(\"\");\n  const [descriptions, setDescriptions] = useState([]);\n  const registered = props.addressVoters.includes(props.accounts[0], 0);\n\n  const addProposal = async () => {\n    await props.contract.methods.addProposal(proposalDesc).send({ from: props.accounts[0] });\n  };\n\n  function handleOnChange(event) {\n    const { value } = event.target;\n    setProposalDesc(value);\n  }\n  useEffect(() => {\n    async function retrieveProposalsContent(id) {\n      if (registered) {\n        const content = await props.contract.methods.getOneProposal(id).call({ from: props.accounts[0] });\n        console.log(content);\n        return content;\n      }\n      return \"\";\n    }\n\n    //reinitiate proposal if we add another one\n    setDescriptions([]);\n\n    //TODO: refactor this mess\n    props.proposals.map(async (proposal, id) => {\n      const propContent = await retrieveProposalsContent(proposal);\n      setDescriptions((prevDescription) => {\n        return [...prevDescription, propContent.description];\n      });\n    });\n  }, [props.proposals, props.accounts, props.contract.methods, registered]);\n\n  return (\n    <div>\n      <h1>Proposals</h1>\n      {props.proposals.map((proposal) => {\n        return (\n          <h5 key={proposal}>\n            {proposal} : {descriptions[proposal]}\n          </h5>\n        );\n      })}\n      {/* Check if is owner and workflow == registration started */}\n      {registered && props.workflow === \"1\" && (\n        <div>\n          <input name=\"proposal\" placeholder=\"Description\" value={proposalDesc} onChange={handleOnChange} />\n          <button onClick={addProposal}>Add Proposal</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Proposals;\n","import React, { useState } from \"react\";\n\nfunction SetVote(props) {\n  const [voteId, setVoteId] = useState(0);\n  //check onlyVoter\n  const registered = props.addressVoters.includes(props.accounts[0], 0);\n\n  function handleOnChange(event) {\n    const { value } = event.target;\n    setVoteId(value);\n  }\n\n  const vote = async () => {\n    await props.contract.methods.setVote(voteId).send({ from: props.accounts[0] });\n  };\n\n  return (\n    <div>\n      <h1>Vote for a proposal</h1>\n      {/* Check if is onlyVoter and workflow == votingSessionStarted */}\n      {registered && props.workflow === \"3\" && (\n        <div>\n          <input name=\"Vote\" placeholder=\"Id of proposal\" value={voteId} onChange={handleOnChange} />\n          <button onClick={vote}>Add Voter</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SetVote;\n","import React, { useState, useEffect } from \"react\";\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport UserAddress from \"./components/UserAddress.jsx\";\nimport Workflow from \"./components/Workflow\";\nimport Voters from \"./components/Voters\";\nimport Proposals from \"./components/Proposals\";\nimport SetVote from \"./components/SetVote\";\n\nfunction App() {\n  // const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n  // const [owner, setOwner] = useState(\"\");\n  const [isOwner, setIsOwner] = useState(\"\");\n\n  const [workflowStatus, setWorkflowStatus] = useState(0);\n  const [addressVoters, setaddressVoters] = useState([]);\n  const [proposals, setProposals] = useState([]);\n  const [winner, setWinner] = useState(0);\n\n  useEffect(() => {\n    async function setUpWeb3() {\n      try {\n        const web3Provider = await getWeb3();\n        const accounts = await web3Provider.eth.getAccounts();\n        const networkId = await web3Provider.eth.net.getId();\n        const deployedNetwork = VotingContract.networks[networkId];\n        const instance = new web3Provider.eth.Contract(VotingContract.abi, deployedNetwork && deployedNetwork.address);\n\n        // setWeb3(web3Provider);\n        setAccounts(accounts);\n        setContract(instance);\n\n        //retrieve winner in case already one\n        setWinner(await instance.methods.winningProposalID().call({ from: accounts[0] }));\n\n        //r√©cup√®re l'addresse du owner.\n        const owner = await instance.methods.owner().call({ from: accounts[0] });\n        // setOwner(own);\n\n        //initialize the workflow in the state\n        const initWorkflow = await instance.methods.workflowStatus().call({ from: accounts[0] });\n        setWorkflowStatus(initWorkflow);\n\n        //check if the current user is the owner\n        // console.log(own === accounts[0]);\n        setIsOwner(owner === accounts[0]);\n\n        let from0Tolast = {\n          fromBlock: 0,\n          toBlock: \"latest\",\n        };\n\n        let fromLast = {\n          fromBlock: \"latest\",\n        };\n\n        //here we listen for workflow status changes\n        instance.events.WorkflowStatusChange(fromLast).on(\"data\", (event) => {\n          setWorkflowStatus(event.returnValues.newStatus);\n        });\n\n        // here we listen for past voter registered\n        let addresses = await instance.getPastEvents(\"VoterRegistered\", from0Tolast);\n        setaddressVoters(\n          addresses.map((add) => {\n            return add.returnValues.voterAddress;\n          })\n        );\n        // here we listen for next voter registered\n        instance.events.VoterRegistered(fromLast).on(\"data\", (event) => {\n          setaddressVoters((prevAddresses) => {\n            return [...prevAddresses, event.returnValues.voterAddress];\n          });\n        });\n\n        // here we listen for past proposals events\n        let proposalsEvt = await instance.getPastEvents(\"ProposalRegistered\", from0Tolast);\n        setProposals(\n          proposalsEvt.map((prop) => {\n            return prop.returnValues.proposalId;\n          })\n        );\n        // here we listen for next proposals events\n        instance.events.ProposalRegistered(fromLast).on(\"data\", (event) => {\n          setProposals((prevProposal) => {\n            return [...prevProposal, event.returnValues.proposalId];\n          });\n        });\n      } catch (error) {\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    }\n\n    setUpWeb3();\n  }, []);\n\n  return (\n    <div id=\"App\">\n      <div className=\"container\">\n        <h1>Voting</h1>\n        <UserAddress accounts={accounts} addressVoters={addressVoters} />\n        <Workflow contract={contract} accounts={accounts} workflow={workflowStatus} isOwner={isOwner} winner={winner} setWinner={setWinner} />\n        <Voters contract={contract} accounts={accounts} workflow={workflowStatus} isOwner={isOwner} addressVoters={addressVoters} />\n        <Proposals contract={contract} accounts={accounts} workflow={workflowStatus} addressVoters={addressVoters} proposals={proposals} />\n        <SetVote contract={contract} accounts={accounts} workflow={workflowStatus} addressVoters={addressVoters} proposals={proposals} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}